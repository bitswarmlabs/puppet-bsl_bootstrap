#!/bin/bash

### BEGIN INIT INFO
# Provides:          bsl-bootstrap-init
# Required-Start:    $local_fs $network $syslog
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: bsl_bootstrap early provisioning
# Description:       Early startup init for bsl_bootstrap Puppetmaster provisioning
### END INIT INFO

set -o pipefail

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

LOGFILE='<%= scope.lookupvar('bsl_bootstrap::puppetmaster::config::init_service_puppet_log') %>'
PUPPET='<%= scope.lookupvar('bsl_bootstrap::puppet_binary') %>'
PUPPET_LOGDEST='<%= scope.lookupvar('bsl_bootstrap::puppetmaster::config::init_service_puppet_logger') %>'
TARGET_CERTNAME='<%= scope.lookupvar('bsl_bootstrap::puppetmaster::config::target_certname') %>'

do_start () {
  declare -i final_result=0
  declare -i retval=0

  log_begin_msg " BSL_BOOTSTRAP STARTUP INIT BEGINS via ${PUPPET} target_certname=${TARGET_CERTNAME}"
  echo "# BSL_BOOTSTRAP STARTUP INIT BEGINS via ${PUPPET} @ $(date) target_certname=${TARGET_CERTNAME}" >> $LOGFILE

  log_progress_msg "Executing apt-get update"
  echo "\\n\\n## executing apt-get update\\n" >> $LOGFILE
  apt-get update -qy 2>&1 | tee -a $LOGFILE
  retval=$?
  final_result+=$retval

  if [ $retval -eq 0 ]; then
    log_success_msg "success!"
    echo "## success!\\n" >> $LOGFILE
  else
    log_failure_msg "failed ($retval)\\n"
    echo "## failed ($retval)\\n" >> $LOGFILE
  fi

  log_progress_msg "Creating user for Puppet"
  echo "\\n\\n## creating user for puppet\\n" >> $LOGFILE

  <%= scope.lookupvar('bsl_bootstrap::puppetmaster::config::init_service_facter_vars') -%> $PUPPET \
    resource --verbose --show_diff \
    user puppet ensure=present home='/etc/puppetlabs/code' \
    2>&1 | tee -a $LOGFILE
  retval=$?
  final_result+=$retval

  if [ $retval -eq 0 ]; then
    log_success_msg "success!"
    echo "success!\\n" >> $LOGFILE
  else
    log_failure_msg "failed ($retval)\\n"
    echo "## failed ($retval)\\n" >> $LOGFILE
  fi

  log_progress_msg "Setting /etc/hosts alias for ${TARGET_CERTNAME}"
  echo "\\n\\n## Setting /etc/hosts alias for ${TARGET_CERTNAME}"
  <%= scope.lookupvar('bsl_bootstrap::puppetmaster::config::init_service_facter_vars') -%>  $PUPPET \
    apply --logdest=$PUPPET_LOGDEST --verbose --show_diff \
    -e "host { '${TARGET_CERTNAME}': ip => '127.0.0.1', host_aliases => [$::hostname, $::fqdn] }" \
    2>&1 | tee -a $LOGFILE
  retval=$?
  final_result+=$retval

  if [ $retval -eq 0 ]; then
    log_success_msg "success!"
    echo "success!\\n" >> $LOGFILE
  else
    log_failure_msg "failed ($retval)\\n"
    echo "## failed ($retval)\\n" >> $LOGFILE
  fi

  if [ $final_result -gt 0 ]; then
    echo "# BSL_BOOTSTRAP INIT FAIL (${final_result})\\n\\n" >> $LOGFILE
  else
    echo "# BSL_BOOTSTRAP TOTAL SUCCESS\\n\\n" >> $LOGFILE
  fi

  log_end_msg $finalretval
}

case "$1" in
  start)
    do_start
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  *)
    echo "Usage: $0 {start}" >&2
    exit 1
  ;;
esac
